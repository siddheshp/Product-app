@* strongly types view*@
@model IEnumerable<ProductApp.Models.Product>

@{
    ViewData["Title"] = "Index";
}

<h1>Product List</h1>

<p>
    @*in ASP.NEt MVC using .NET frameowrk, this line would be*@
    @Html.ActionLink("Create New", "Create")
    @* remember this? This is called HTML helper methods
        This is razor syntax which allows us to create HTML from C# code
    *@
    @*asp-action is called tag helper. Notice that now its much easier and convenient
        to add C# code bevaiour to native HTML tags.

        *@
    <a asp-action="Create">Create New</a>

</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @* again tag helper and pass product id as route id*@
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
